using System;

namespace 객체지향_여행_스택과_힙
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Hello World!");
        }
    }
}
/*
 * 프로그램이 실행되면 메모리가 할당된다.
 * 그 중 기억해야할 부분은 스택영역과 힙영역 (+코드영역, 데이터영역)
 * 함수에서 선언되는 변수들은 스택영역에 저장됨
 * 
 * F()
 * {
 *    int a;
 * }
 * 
 * 에서 a는 스택에 저장
 * 구조체, 변수 등은 복사타입, 클래스(객체)는 참조타입
 * 복사되는 타입은 메모리 안에 본체가 저장
 * ex. Mage.attack, Mage.hp 등
 * 
 * 참조되는 타입은 메모리 안에 주소가 저장
 * 참조타입의 본체는 힙영역에 저장됨
 * 힙 영역은 동적할당하는 객체 등이 저장되는 영역
 * new를 할 때마다 힙 영역에 할당
 * Knight2 = knight 했을 때 하나를 바꾸면 나머지 하나도 바뀌는 이유가 이것
 * 
 * 스택은 함수가 실행이 되는 순간부터 종료가 되는 구간까지 
 * 어느 정도 영역을 사용하는지 추적함.
 * 
 * 스택은 알아서 관리가 되기 때문에 추적할 필요가 없음
 * 
 * 힙은 메모리를 할당하고 어떤 행동도 하지 않는다면 계속 남아있음.
 * C++의 경우 new를 했으면 반드시 delete를 해주어야함 (C#은 알려줌)
 * 
 * 그러나 무조건 참조타입이 힙에 할당되는 것은 아님
 * ref를 통해서 함수호출을 하면 스택에 있어도 참조타입으로 호출 가능
 * 
 * /
